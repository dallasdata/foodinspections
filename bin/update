#!/bin/bash
#
# The MIT License (MIT)
#
# Copyright (c) 2015 dallasdata
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# Update the food inspection scores dataset.

EXECNAME=$(basename $0)
DIRNAME=$(dirname $0)
WORKDIR=$(mktemp -d)

log() {
    echo >&2 "$EXECNAME: $@"
}

die() {
    log $@
    exit 1
}

cleanup() {
    rm -fr $WORKDIR
}

set -e
set -o pipefail

trap cleanup EXIT

[[ $# -ge 1 ]] || die "missing <gh-pages> workdir path"
gh_pages_workdir=$1
shift

[[ -d $gh_pages_workdir/.git ]] || \
    die "$gh_pages_workdir is not a Git repository"

# Clean up the gh-pages repo
(
    cd $gh_pages_workdir ;
    git reset --hard origin/gh-pages ;
    git clean -dfx ;
    git pull --rebase origin gh-pages ;
)

# Clean up the local repo
(
    cd $DIRNAME/.. ;
    git reset --hard origin/master ;
    git clean -dfx ;
    git pull --rebase origin master ;
)

# Download scores
$DIRNAME/download-scores -vvvvv >$WORKDIR/scores-new.csv
$DIRNAME/union-scores -vvvvv \
    $gh_pages_workdir/scores.csv $WORKDIR/scores-new.csv \
    >$WORKDIR/scores-merged.csv

if diff $gh_pages_workdir/scores.csv $WORKDIR/scores-merged.csv >/dev/null ; then
    log "no change to scores; not generating feed"
    exit 0
fi

cp -f $WORKDIR/scores-merged.csv $gh_pages_workdir/scores.csv
cat $gh_pages_workdir/scores.csv | \
    $DIRNAME/render-feed -vvvvv -n 100 -f atom all \
    >$gh_pages_workdir/feed.atom.xml
cat $gh_pages_workdir/scores.csv | \
    $DIRNAME/render-feed -vvvvv -n 100 -f atom failures \
    >$gh_pages_workdir/feed-failures.atom.xml

(
    cd $gh_pages_workdir ;
    git commit -am "Automated update to dataset" ;
    git push origin gh-pages ;
)
